import time
import RPi.GPIO as GPIO


GPIO.setmode(GPIO.BOARD)
trigger_pin = 11
echo_pin = 7
led_pin = 13

#GPIO.setwarnings(False)
GPIO.setup(trigger_pin, GPIO.OUT)
#GPIO.setwarnings(False)
GPIO.setup(echo_pin, GPIO.IN)
#GPIO.setwarnings(False) 
GPIO.setup(led_pin, GPIO.OUT)
 
GPIO.output(led_pin, GPIO.OUT)
led = GPIO.PWM(led_pin, 100)
led.start(1)
print("PWM setup...")

def distance():
    print("Measuring distance...")
    GPIO.output(trigger_pin, True)
    time.sleep(0.00001)
    GPIO.output(trigger_pin, False)
    
    start = time.time()
    stop = time.time()
    
    while GPIO.input(echo_pin) == 0:
        start =time.time()
        
    while GPIO.input(echo_pin) == 1:
        stop = time.time()
        
    measuredtime = stop - start
    
    distance = (measuredtime * 34300)/2

    print("Complete")
    return distance

def setting_frequency(dist):
    
    if dist < 500 and dist > 400:
        return 2
    
    elif dist < 400 and dist >300:
        return 3
    
    elif dist < 300 and dist >= 200:
        return 4
    
    elif dist <200 and dist >= 100:
        return 5
    
    elif dist < 100:
        return 6
    
    if dist > 500:
        return 0.25
    
    else:
        return 0.25
                                  
if __name__== '__main__':
    print("Running")
    dc=0
    led.start(dc)
    try:
        while True:
            distancemeasure = distance()
            print ("Distance: " + str (distancemeasure))
            if(distancemeasure >= 100):
                dc = 0
                led.ChangeDutyCycle(dc)
            elif(distancemeasure >= 0 and distancemeasure < 100):
                dc = 100 - distancemeasure
                print(dc)
                #dc = distancemeasure
                led.ChangeDutyCycle(dc)
        
    except KeyboardInterrupt:
        print("Measurement stopped by User")
        led.stop()
        GPIO.cleanup()
